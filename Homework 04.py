'''
    Кортеж - 30 б.
1) Названия дней недели: Создайте кортеж days_of_week, содержащий названия дней недели.
Выведите дни недели на экран в обратном порядке.
'''
# days_of_week = ('Monday', 'Tuesday', 'Wednsday', 'Thursday', 'Friday', 'Saturday', 'Sunday')
# print(days_of_week[::-1])
'''
2) Геометрические фигуры: Создайте кортеж shapes, содержащий названия геометрических
фигур (например, квадрат, треугольник, круг и т. д.). Запросите у пользователя название
фигуры и выведите её на экран.
'''
# shapes = ('Квадрат', 'Треугольник', 'Круг', 'Овал')

# user_data = input('Введите геометрическую фигуру: ')
# via_index = shapes.index(user_data)

# if user_data in shapes:
#     print(shapes[via_index])
# else:
#     print('Такого нет')
'''
3) Сезоны года: Создайте кортеж seasons, содержащий названия сезонов года.
Выведите сезоны года на экран в алфавитном порядке.
'''
# seasons = ('Зима', 'Весна', 'Лето', 'Осень')
# result = sorted(seasons)
# print(result)
'''
4) Номера месяцев: Создайте кортеж month_numbers, содержащий номера месяцев от 1 до 12.
Запросите у пользователя номер месяца и выведите название этого месяца.
'''
# month_numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
# months_names = ['Январь', 'Февраль', 'Март', 'Апрель','Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']

# user = int(input("Введите номер месяца от 1 до 12: "))

# index = month_numbers.index(user)
# name = months_names[index]

# if user in month_numbers:
#     print(name)
# else:
#     print("Такого месяца нет!")

'''
5) Температуры: Создайте кортеж temperatures, содержащий значениятемператур
в течение дня. Выведите минимальную и максимальную температуры.
'''
# temperatures = (2, 2, 1, -2, -2, -2)
# print('Максимальная температура: ', max(temperatures))
# print('Минимальная температура: ', min(temperatures))
'''
6) Пары чисел: Создайте кортеж number_pairs, содержащий пары чисел.
Вычислите сумму всех пар чисел.
'''
# numbers_pairs = ((1, 2), (3, 4), (5, 6), (7, 8))
# pairs_sum = sum(numbers_pairs)

# print("Сумма всех пар чисел: ", pairs_sum)

'''
Множество - 30 б.
1) Удаление дубликатов: Удалите дубликаты из списка, преобразовав его в множество.
'''
# numbers = {1, 2, 3, 4, 2, 3, 5, 6, 1}
# result = set(numbers)
# print(result)
'''
2) Подсчёт уникальных слов: Создайте множество слов из строки текста
и выведите количество уникальных слов.
'''
# text = 'Подсчёт уникальных слов: Создайте множество слов из строки текста и выведите количество уникальных слов.')
# words_set = set(text.split(' '))
# print("Количество уникальных слов: ", len(words_set))
'''
3) Сравнение множеств: Проверьте, содержат ли два множества одни и те же элементы.
'''
# nums1 = {1, 2, 3, 4, 5}
# nums2 = {3, 4, 5, 6, 7}
# same_numbers = nums1 & nums2
# print(same_numbers)
'''
4) Удаление элемента из множества: Удалите определенный элемент из множества.
'''
# nums = {1, 2, 3, 4, 5}
# user_data = int(input('Введите число: '))
# nums.remove(user_data)
# print(nums)
'''
5) Поиск пересечения в строках: Найдите все общие символы в двух строках
и выведите их в виде множества.
'''
# text1 = 'Найдите все общие символы в двух строках'
# text2 = 'и выведите их в виде множества'
# new1 = set(text1)
# new2 = set(text2)
# result = new1.intersection(new2)
# result.remove(' ')
# print('Общие символы: ', result)
'''
Словарь - 40 б.
1) Подсчет частоты элементов: Создайте словарь word_count, содержащий частоту
встречаемости слов в тексте. По запросу слова выведите количество его вхождений
'''
# text = "Создайте словарь word_count, содержащий частоту встречаемости слов в тексте. По запросу слова выведите количество его вхождений"
# words = text.split(' ')
# quantity = {word: words.count(word) for word in set(words)}
# search = input("Поиск: ")

# if search in quantity:
#     print(f'Слово встречается {quantity[search]} раз в тексте.')
# else:
#     print('Нету такого слова.')
'''
2) Проверка наличия ключа: Проверьте, есть ли определенный ключ в словаре.
'''
# catalog = {'a': 1, 'b': 2, 'c': 3}
# req = input('Поиск: ')
# if req in catalog.keys():
#       print(f"Ключ {req} найден в словаре: {catalog[req]}")
# else:
#     print(f"Ключ {req} не найден в словаре.")
'''
3) Извлечение значений: Извлеките все значения из словаря
и сохраните их в отдельный список.
'''
# catalog = {'a': 1, 'b': 2, 'c': 3}
# result = set(catalog.values())
# print(*result)
'''
4) Объединение словарей: Объедините два словаря в один.
'''
# cat1 = {'a': 1, 'b': 2}
# cat2 = {'b': 3, 'c': 4}
# cat1.update(cat2)
# print(cat1)
'''
5) Сортировка словаря: Отсортируйте словарь по ключам или значениям
и выведите результат
'''
# catalog = {'a': 1, 'c': 3, 'b': 2}
# sorted_keys = dict(sorted(catalog.keys()))
# sorted_value = dict(sorted(catalog.values()))
# print("Отсортированный словарь по ключам:", sorted_keys)
# print("Отсортированный словарь по значениям:", sorted_value)
