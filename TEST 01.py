'''
Строка
1) Допишите в конец строки 'автопрогон' ее длину и выведите результат на экран
'''
text = 'автопрогон'
l_text = str(len(text))
result = text+l_text
print(result)

'''
Строка
2) Дана строка 'в Ереване'. Подсчитайте в ней количество русских символов
'е' в любом регистре и выведите результат на экран.
'''
text = 'в Ереване'
result = 0
for i in text:        
        if i == 'е' or i == 'Е':
                result += 1

print(result)

'''
Строка
3) Подсчитайте количество слов в строке 'Вот и пришла осень золотая!'.
Разделителем слов считайте пробел. Выведите результат подсчета на экран.
'''
text = 'Вот и пришла осень золотая!'
count = 0

for i in text.split():
    if i != 'Вот' and  i != 'и':
        count += 1

print(count)
'''
Строка
4) Подсчитайте количество цифр 7 дробной части десятичного числа 377.37177785772707
'''
number = 377.37177785772707
list_number = str(number).split('.')
count = list_number[1].count('7')
print(count)
'''
Строка
5) Дана строка 'акваланг'. Замените в ней все символы 'а' числами,
которые соответствуют индексу этого символа в строке.
Выведите измененную строку на экран.
'''
text = 'акваланг'
result = ''

for i, value in enumerate(text):
    if value == 'а':
        result += str(i)
    else:
        result += value

print(result)

'''
Список
1) Используя операции индексирования и среза выведите на экран
первый и третий элементысписка [1, 2, 3, 4, 5],
а также срез списка из первых трех элементов.
Реализуйте вывод двумя способами: используя только положительные
и только отрицательные индексы.
'''
numbers = [1, 2, 3, 4, 5]
print(numbers[0], numbers[2]), print(numbers[0:3])
print(numbers[-5], numbers[-3]), print(numbers[:-2])
'''
Список
2) Дан список [[1, 2, ['Ok!', 3]], ['list', 4], 5].
Выведите на экран строку 'Ok!', использовав синтаксис доступа
к элементу списка по его индексу.
'''
my_list = [[1, 2, ['Ok!', 3]], ['list', 4], 5]
print(my_list[0][2][0])
'''
Список
3) Дан список ['Санкт', '+', 'Петербург']. Исправьте плюс на дефис
и выведите название города на экран использовав доступ
к элементам списка по индексам.
'''
list = ['Санкт', '+', 'Петербург']
list[1] = '-'
print(''.join(list))
'''
Список
4) Замените в списке [1, 2, 3, 4, 5] первые три элемента их суммой.
Затем добавьте в конец списка число 7.
Переместите первый элемент конечного списка в предпоследнюю позицию списка.
Выведите список на экран.
Используйте в решении только доступ по индексу и срезы.
'''
list = [1, 2, 3, 4, 5]
summa = 0
for i in list[0:3]:
    summa += i
list[0:3] = [summa]
list.append(7)
list.append(list.pop(0))
print(list)
'''
Список
5) Дан список натуральных чисел [13, 5, 5, 8, 16, 4].
Удалите из него первое четное число, имеющее нечетный индекс.
Выведите измененный список на экран.
'''
list = [13, 5, 5, 8, 16, 4]
for index, value in enumerate(list):
    if index % 2 != 0 and value % 2 == 0:
        list.remove(value)
print(list)

'''
Словарь
1) Создайте словарь содержащий данные о человеке.
В качестве строковых ключей используйте его имя, возраст и пол.
Значения придумайте самостоятельно.
Выведите полученный словарь на экран.
'''
my_dcit = {
    'name': 'Соломон',
    'age': 30,
    'gender': 'М'
}
print(my_dcit)
'''
Словарь
2) Удалите из словаря d = {'a': 1, 'b': 2, 'c': 3} элементы d['a'] и d['c'], использовав для второго элемента оператор удаления,
а для первого имеющийся у словарей метод. Выведите результат на экран, после чего очистите словарь.
'''
d = {'a': 1, 'b': 2, 'c': 3}
d.pop('a')
del d['c']
print(d)
d.clear()
'''
Словарь
3) Дан список ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']. Создайте словарь с ключами 'd1', 'd2', ...,
соответствующими индексам элементов списка. Выведите на экран элемент словаря, который соответствует среде,
в формате ключ: значение.
'''
weeks = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']
days = []
for i in range(1,8):
        days.append(f'd{i}')
my_dict = dict(zip(days, weeks))
print(my_dict)
'''
Словарь
4) Дан словарь с товарами. Выведите на экран все товары,
цена которых не превышает 100 рублей,
а текущий остаток не менее 10 кг.
'''
goods = {
     "apple": {"name": "Яблоки", "cost": 25, "kg": 30},

     "pear": {"name": "Груши", "cost": 50, "kg": 5},

     "plum": {"name": "Сливы", "cost": 55, "kg": 25},

     "cherry": {"name": "Вишни", "cost": 110, "kg": 15}
}
for keys, values in goods.items():
    if values['cost'] < 100 and values['kg'] > 10:        
        print(f'Товар: {values['name']}\nЦена: {values['cost']} сом,\nОстаток: {values['kg']} кг\n')

'''
Линейные алгоритмы
1) Перевести граммы в килограммы и вывести результат на экран.
Значение граммов ввести с клавиатуры.
'''
def grams_to_kilograms():
    g = float(input('Введите количество грамм: '))
    kg = g / 1000
    print(f'{int(g)} граммов  равна {kg} килограмм')
grams_to_kilograms()
'''
Линейные алгоритмы
2) Даны две переменные x = 10 и y = 55.
Поменяйте их значения местами.
Выведите значения переменных на экран до и после замены.
'''
def castling_variables(a, b):
    c = a
    a = b
    b = c
    return a, b

x = 10
y = 55
print(castling_variables(x, y))
'''
Линейные алгоритмы
3) С клавиатуры вводится расстояние L в метрах.
Необходимо найти и вывести на экран количество полных километров в нем.
'''
def meter_to_kilometer():
    m = int(input('Введите кол-во метров: '))
    km = m / 1000
    print(f'{m} метров равна {km} километров')
meter_to_kilometer()
'''
Линейные алгоритмы
4) С клавиатуры вводится целое число. Необходимо вывести число,
обратное введенному по порядку составляющих его цифр.
Например, если было введено число 12345, программа должна вывести
пользователю на экран число 54321.
'''
def reversed_numbers(numbers):
        r_numbers = int(numbers[::-1])
        return r_numbers

number = input("Введите целое число: ")
result = reversed_numbers(number)
print(result)
'''
Линейные алгоритмы
5) Получите и преобразуйте текущую системную дату, возвращаемую методом date.today()
модуля стандартной библиотеки datetime, из формата «год-месяц-день»
в формат «день.месяц.год». Выведите оба формата даты на экран.
'''
from datetime import date
usa_date = date.today()
def formatted_date():
    usa_date = date.today()
    new_date = usa_date.strftime("%d-%m-%Y")
    return new_date

print('Стандартная дата:', usa_date)
print('Форматированная дата:', formatted_date())
'''
Логические выражения
1) Записать и вывести на экран условие, которое является истинным,
когда хотя бы одно из чисел x, y и z больше 80.
'''
x = int(input('Введите целое число: '))
y = int(input('Введите целое число: '))
z = int(input('Введите целое число: '))

if x > 80 or y > 80 or z > 80:
    result = True
    print(f'Хотя бы одно из чисел {x}, {y} или {z} больше 80. Результат: ', result)
if x > 80:
    print(f'Число {x} больше 80')
if y > 80:
    print(f'Число {y} больше 80')
if z > 80:
    print(f'Число {z} больше 80')
'''
Логические выражения
2) Записать и вывести на экран условие, которое является истинным,
когда оба числа a и b одновременно положительны или отрицательны.
'''
a = int(input('Введите целое число: '))
b = int(input('Введите целое число: '))

if (a > 0 and b > 0) or (a < 0 and b < 0):
    result = True
    print(f'Числа {a} и {b} либо оба положительные, либо оба отрицательные. Результат: ', result)
else:
    result = False
    print('Одно число положительное, а другое отрицательное. Результат: ', result)
'''
Логические выражения
3) Даны три числа: 130, 25 и 70. Выведите на экран наименьшее из них,
использовав для этого программную проверку.
'''
x = 130
y = 25
z = 70

if x < y and x < z:
    print("Наименьшее число:", x)
elif y < x and y < z:
    print("Наименьшее число:", y)
else:
    print("Наименьшее число:", z)
'''
Циклы
1) Посчитайте количество символов в строке 'Python - это Питон!',
использовав счетчики на основе циклов for и while.
'''
text = 'Python - это Питон!'
count = 0

for i in text:
    count += 1
print('Подсчёт циклом for: ', count, 'cимволов')

x = 0
y = 0

while x < len(text):
      y += 1
      x += 1
print('Подсчёт циклом while: ', y, 'cимволов')

'''
Циклы
2) Найдите сумму всех элементов списка [1, '2', 3, 4, '5'],
предварительно приводя строки к целым числам.
'''
given_list = [1, '2', 3, 4, '5']
summa = 1
for i in given_list:
    i = int(i)
    summa *= i
print(summa)
'''
Циклы
3) Используя циклы, проверьте при помощи оператора in
наличие символов строки 'abcde123' в строке 'bad_cat_23',
выводя результаты проверки на экран в виде
«Символ "a" есть в "bad_cat_23".» или «Символа "n" нет в "bad_cat_23".».
'''
text1 = 'abcde123'
text2 = 'bad_cat_23'
for i in text1:
    if i in text2:
        print(f'Символ "{i}" есть в "{text2}"')
    else:
        print(f'Символ "{i}" нет в "{text2}"')
'''
Функции 
'''
from random import randint # для генерации случайных чисел используйте модуль “random”

# Создайте функцию gen_list(), которая получает в качестве аргумента числовое значение.
def gen_list(amount):
    list = []
    for i in range(1, amount + 1):
        # программа должна сгенерировать список из случайных чисел от 1 до 100
        # в том количестве которое будет передано программе в качестве аргумента
        i = randint(1, 100)
        list.append(i)        
    return list # данная программа в итоге должна вернуть объект типа список (list)

# Воспользуйтесь функцией gen_list() и создайте список my_list из 50 элементов
my_list = gen_list(50)

# Из этого списка my_list выведите на экран первые 10 элементов и последние 10 элементов
first_10_elements_of_my_list = my_list[0:10]
last_10_elements_of_my_list = my_list[:-11:-1]
print('Первые 10 элементов: ', first_10_elements_of_my_list)
print('Последние 10 элементов: ', last_10_elements_of_my_list)

# Разверните список my_list в обратном порядке и выведите на экран**
print('Все 50 элементов в обратном порядке: ', my_list.reverse())

# Создайте новый список my_list_pow куда надо будет поместить
# все элементы списка my_list, возведенные в квадрат.
my_list_pow = []
for i in my_list:
    i = i**2
    my_list_pow.append(i)
print(my_list_pow)